<script>
var initLeaderboard = function() {
  // constants and global variables
  var types = ["bbox_challenge2016", "segm_challenge2016", "bbox_challenge2015", "segm_challenge2015", "bbox_standard2015", "segm_standard2015", "bbox_dev2015", "segm_dev2015"];
  var metrics = ["AP", "AP_50", "AP_75", "AP_small", "AP_medium", "AP_large", "AR_max_1", "AR_max_10", "AR_max_100", "AR_small", "AR_medium", "AR_large"];
  var supercats = ["accessory", "animal", "appliance", "electronic", "food", "furniture", "indoor", "kitchen", "outdoor", "person", "sports", "vehicle"];
  var cats =[[9,"person"], [11,"bicycle"], [11,"car"], [11,"motorcycle"], [11,"airplane"], [11,"bus"], [11,"train"], [11,"truck"], [11,"boat"], [8,"traffic light"], [8,"fire hydrant"], [8,"stop sign"], [8,"parking meter"], [8,"bench"], [1,"bird"], [1,"cat"], [1,"dog"], [1,"horse"], [1,"sheep"], [1,"cow"], [1,"elephant"], [1,"bear"], [1,"zebra"], [1,"giraffe"], [0,"backpack"], [0,"umbrella"], [0,"handbag"], [0,"tie"], [0,"suitcase"], [10,"frisbee"], [10,"skis"], [10,"snowboard"], [10,"sports ball"], [10,"kite"], [10,"baseball bat"], [10,"baseball glove"], [10,"skateboard"], [10,"surfboard"], [10,"tennis racket"], [7,"bottle"], [7,"wine glass"], [7,"cup"], [7,"fork"], [7,"knife"], [7,"spoon"], [7,"bowl"], [4,"banana"], [4,"apple"], [4,"sandwich"], [4,"orange"], [4,"broccoli"], [4,"carrot"], [4,"hot dog"], [4,"pizza"], [4,"donut"], [4,"cake"], [5,"chair"], [5,"couch"], [5,"potted plant"], [5,"bed"], [5,"dining table"], [5,"toilet"], [3,"tv"], [3,"laptop"], [3,"mouse"], [3,"remote"], [3,"keyboard"], [3,"cell phone"], [2,"microwave"], [2,"oven"], [2,"toaster"], [2,"sink"], [2,"refrigerator"], [6,"book"], [6,"clock"], [6,"vase"], [6,"scissors"], [6,"teddy bear"], [6,"hair drier"], [6,"toothbrush"]];
  var N=types.length, current={type:'bbox_standard2015',team:-1}, data=new Array(N);
  for( var i=0; i<N; i++ ) data[i]={ main:[], refs:[], teams:[], cats:[] };
  // extract main data for leaderboard for all teams
  var loadData = function( entries ) {
    for( var i=0; i<N; i++ ) {
      for( var j=0; j<entries[types[i]].length; j++ ) {
        var e=entries[types[i]][j], name=e.team.name, r=JSON.parse(e.results);
        data[i].main[j] = new Array(2+metrics.length); data[i].main[j][0]=name;
        for( var k=0; k<metrics.length; k++ ) data[i].main[j][k+1] = r[metrics[k]];
        data[i].main[j][metrics.length+1] = e.date;
        if(e.url != "") name = "<a href='" + e.url + "' target='_blank'> " + name + " </a>";
        data[i].refs[j] = ["["+(j+1)+"] "+name, e.team.members, e.description];
        data[i].teams[j]=e.team.id; data[i].cats[j]=[];
      }
    }
    setData(current.type,current.team);
  };
  // extract category data for leaderboard for current team
  var loadCats = function( entries ) {
    for( var i=0; i<N; i++ ) {
      var j, d, K, r, c;
      j=$.inArray(current.team,data[i].teams); if(j==-1) continue;
      d=JSON.parse(entries[types[i]][0].results_details);
      K=cats.length+supercats.length; data[i].cats[j]=new Array(K);
      for( var k=0; k<K; k++ ) {
        if( k<supercats.length ) {
          c=supercats[k]; r=d.per_supercategory[c]; c+=": [all]";
        } else {
          c=cats[k-supercats.length]; r=d.per_category[c[1]]; c=supercats[c[0]]+": "+c[1];
        }
        data[i].cats[j][k]=new Array(2+metrics.length); data[i].cats[j][k][0]=c;
        for( var l=0; l<metrics.length; l++ ) data[i].cats[j][k][l+1]=r[l];
        data[i].cats[j][k][metrics.length+1] = data[i].main[j][metrics.length+1];
      }
      data[i].cats[j][K]=[]; data[i].cats[j][K][0]="[all]: [all]";
      for(var l=1; l<metrics.length+2; l++) data[i].cats[j][K][l]=data[i].main[j][l];
    }
    setData(current.type,current.team);
  }
  // function to set the data shown in the leaderboard and event binders
  var bindSetType=function(e,type) { var t=type; e.click( function(){setData(t,current.team)} )};
  var bindSetTeam=function(e,team) { var t=team; e.click( function(){setData(current.type,t)} )};
  for( var i=0; i<N; i++ ) bindSetType($('#a_'+types[i]),types[i]);
  var setData = function( type, team ) {
    var i=$.inArray(type,types), j=$.inArray(team,data[i].teams);
    if(j==-1) team=-1; current.type=type; current.team=team;
    tableRefs.clear().rows.add(data[i].refs).draw();
    if( team==-1 ) {
      $('div.toolbar').html('');
      tableData.clear().rows.add(data[i].main).draw();
    } else if( data[i].cats[j].length>0 ) {
      $('div.toolbar').html('<a id="clearTeam"><b>&#8629; '+data[i].main[j][0]+'</a><sup>'+(j+1)+'</sup>');
      tableData.clear().rows.add(data[i].cats[j]).draw(); bindSetTeam($('#clearTeam'),-1);
    } else {
      $.ajax({ type:'POST', url:'/leaderboard_get_dets_entries/',data:{'team_id':team}})
        .done( function(json) { loadCats(JSON.parse(json).entries) });
    }
  }
  // initialize and format DataTables https://www.datatables.net/
  var propsRefs = { 'paging':false, 'info':false, 'filter':false, 'sort':false, 'autoWidth':false };
  propsRefs.columnDefs = [{'targets':0,'sWidth':'20%'}];
  var propsData = { 'paging':false, 'info':false, 'order':[[1, 'desc']], 'dom':'fB<"toolbar">rtip' };
  propsData.buttons=[{extend:'copyHtml5',title:'leaderboard',exportOptions:{orthogonal:'export'},text:'Copy to Clipboard'}, {extend:'csvHtml5', title:'leaderboard',exportOptions:{orthogonal:'export'},text:'Export to CSV'}];
  propsData.columnDefs = [{'targets':0,'render':function(x,type,row,meta) {return (type==='export')?x:(current.team===-1)?'<a id="setTeam'+meta.row+'" style="font-size:12px">'+x+'</a><sup>'+(meta.row+1)+'</sup>':'<span style="font-size:11px">'+x+'</span>'}}, {'targets':13,'render':function(x) {return '<span style="font-size:10px">'+x+'</span>'}}, {'targets':['_all'],'orderSequence':['desc', 'asc']}];
  propsData.drawCallback = function() {
    if(current.team>0) return; var teams=data[$.inArray(current.type,types)].teams;
    for( var k=0; k<teams.length; k++) bindSetTeam($('#setTeam'+k),teams[k])
  }
  var tableData = $('#leaderboard #data').DataTable(propsData);
  var tableRefs = $('#leaderboard #refs').DataTable(propsRefs);
  $('div.toolbar').css({'text-align':'center','padding-top':'4px','font-size':'14px'})
  // load core leaderboard data
  $.ajax({ type:'POST', url:'/leaderboard_get_dets_entries/', data:{'team_id':0}})
    .done( function(json) { loadData(JSON.parse(json).entries) });
};
$( function() { initLeaderboard(); } );
</script>

<!------------------------------------------------------------------------------------------------>
<style>
  #leaderboard td { padding: 6px 4px; vertical-align:middle }
  #leaderboard th { padding: 6px 16px 6px 0px; text-align:right; width:36px }
</style>
<div style="font-size:13px; margin:10px;">
  Last pdated: 06/20/2017 (results migrated weekly from <a href="https://www.codalab.org/competitions/5181" target="_blank">CodaLab</a>). For information about each test split please see the <a href="#detections-upload">upload</a> page. <b>Hints</b>: use the buttons below to select the dataset <i>split</i>, click on column headers to <i>sort</i> the data, use the <i>search</i> bar to filter results, use the buttons to <i>export</i> the current table view, and click on method names to show <i>per-category</i> results.
</div>
<div style="margin:10px 0px; display:inline-block">
  <ul class="nav nav-pills">
    <li><a style="margin-left:-10px; color:#1d2125; padding:5px;font-size:small">BBOX:</a></li>
    <li class="active"><a data-toggle="tab" style="padding:5px;font-size:small" id="a_bbox_standard2015">Standard</a></li>
    <li><a data-toggle="tab" style="padding:5px;font-size:small" id="a_bbox_dev2015">Dev</a></li>
    <li><a data-toggle="tab" style="padding:5px;font-size:small" id="a_bbox_challenge2015">Challenge2015</a></li>
    <li><a data-toggle="tab" style="padding:5px;font-size:small" id="a_bbox_challenge2016">Challenge2016</a></li>
    <br/>
    <li><a style="margin-left:-10px; color:#1d2125; padding:5px;font-size:small">SEGM:</a></li>
    <li><a data-toggle="tab" style="padding:5px;font-size:small" id="a_segm_standard2015">Standard</a></li>
    <li><a data-toggle="tab" style="padding:5px;font-size:small" id="a_segm_dev2015">Dev</a></li>
    <li><a data-toggle="tab" style="padding:5px;font-size:small" id="a_segm_challenge2015">Challenge2015</a></li>
    <li><a data-toggle="tab" style="padding:5px;font-size:small" id="a_segm_challenge2016">Challenge2016</a></li>
  </ul>
</div>
<div class="tab-content" id="leaderboard" style="font-size:12px">
  <table id="data" class="table order-column hover">
    <thead>
      <tr>
        <th style="width:200px"></th>
        <th>AP</th>
        <th>AP<sup>50</sup></th>
        <th>AP<sup>75</sup></th>
        <th>AP<sup>S</sup></th>
        <th>AP<sup>M</sup></th>
        <th>AP<sup>L</sup></th>
        <th>AR<sup>1</sup></th>
        <th>AR<sup>10</sup></th>
        <th>AR<sup>100</sup></th>
        <th>AR<sup>S</sup></th>
        <th>AR<sup>M</sup></th>
        <th>AR<sup>L</sup></th>
        <th style="width:70px">date</th>
      </tr>
    </thead>
  </table>
  <p class="fontTitle" style="margin-bottom:15px">Metrics</p>
  <div class="json fontMono">
    <div class="jsonreg"><b>Average Precision (AP):</b></div>
    <div class="jsonk">AP</div><div class="jsonv">% AP at IoU=.50:.05:.95 <b>(primary challenge metric)</b></div>
    <div class="jsonk">AP<sup>IoU=.50</sup></div><div class="jsonv">% AP at IoU=.50 (PASCAL VOC metric)</div>
    <div class="jsonk">AP<sup>IoU=.75</sup></div><div class="jsonv">% AP at IoU=.75 (strict metric)</div>
    <div class="jsonreg"><b>AP Across Scales:</b></div>
    <div class="jsonk">AP<sup>small</sup></div><div   class="jsonv">% AP for small objects: area &lt; 32<sup>2</sup></div>
    <div class="jsonk">AP<sup>medium</sup></div><div  class="jsonv">% AP for medium objects: 32<sup>2</sup> &lt; area &lt; 96<sup>2</sup></div>
    <div class="jsonk">AP<sup>large</sup></div><div   class="jsonv">% AP for large objects: area &gt; 96<sup>2</sup></div>
    <div class="jsonreg"><b>Average Recall (AR):</b></div>
    <div class="jsonk">AR<sup>max=1</sup></div><div   class="jsonv">% AR given 1 detection per image </div>
    <div class="jsonk">AR<sup>max=10</sup></div><div  class="jsonv">% AR given 10 detections per image</div>
    <div class="jsonk">AR<sup>max=100</sup></div><div class="jsonv">% AR given 100 detections per image</div>
    <div class="jsonreg"><b>AR Across Scales:</b></div>
    <div class="jsonk">AR<sup>small</sup></div><div   class="jsonv">% AR for small objects: area &lt; 32<sup>2</sup></div>
    <div class="jsonk">AR<sup>medium</sup></div><div  class="jsonv">% AR for medium objects: 32<sup>2</sup> &lt; area &lt; 96<sup>2</sup></div>
    <div class="jsonk">AR<sup>large</sup></div><div   class="jsonv">% AR for large objects: area &gt; 96<sup>2</sup></div>
  </div>
  <p>Please see the <a href="#detections-eval">evaluation</a> page for more detailed information about the metrics.</p>
  <p class="fontTitle" style="margin-bottom:0px">References</p>
  <table id="refs" class="table table-striped hover" style="font-size:13px">
    <thead><tr>
      <th></th>
      <th></th>
      <th></th>
    </tr></thead>
  </table>
</div>
